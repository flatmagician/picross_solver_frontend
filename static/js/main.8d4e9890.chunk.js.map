{"version":3,"sources":["RowColForm.js","Popup.js","Constraint.js","Grid.js","Page.js","App.js","serviceWorker.js","index.js"],"names":["RowColForm","props","state","value","val","handleChange","bind","prevProps","prevState","snapshot","this","setState","event","target","passValue","id","className","onSubmit","handleSubmit","name","type","onChange","React","Component","Popup","onKeyDown","console","log","key","preventDefault","stopPropagation","left_offset","cols","colConstraint","top_offset","animation","text","axis","valid","buttonText","getText","nameInput","focus","row","rowConstraint","col","split","map","constraint_block_total","length","forEach","constraint_val","Number","isInteger","passVal","style","ref","input","onClick","Constraint","updateColor","getPopupVal","closePopup","color","JSON","parse","stringify","showPopup","passPopupIndices","passPopupVal","rows","Grid","grid","popupIndices","solution","images","Duck","row_constraint_len","col_constraint_len","row_constraint","col_constraint","Crab","Koala","Tea","Camera","Teapot","image","constructGrid","playAnimation","constructConstraints","populateGrid","renderGrid","getPopupIndices","resizeConstraints","passState","submit","replay_animation","grids","display_grids","j","l","i","Array","fill","push","setInterval","clearInterval","animation_rate","grid_input","i_offset","j_offset","popup","element","constraint","border_val","show_border","excluded_val","index","new_len","Page","getFormValue","newState","request_body","response","exitPopup","solver","getGridState","getData","updateGrid","clickHandler","animationToggle","animationRateToggle","replayAnimation","solverToggle","imageToggle","borderToggle","excludedValToggle","gridState","w","h","x","y","axios","method","url","data","then","catch","error","alert","toString","substring","App","rel","href","integrity","crossorigin","src","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d4e9890.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"./RowColForm.css\"\n\nexport default class RowColForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: this.props.val };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.val !== this.props.val) {\n            if (this.props.val !== this.state.value)\n                this.setState({\n                    value: this.props.val\n                })\n        }\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n        this.props.passValue(this.props.id, +event.target.value)\n    }\n\n\n    render() {\n        return (\n            <div className=\"rowColForm\">\n                <div className=\"input-group mb-3\" onSubmit={this.handleSubmit}>\n                    <span className=\"input-group-addon\" id=\"basic-addon3\">{this.props.name}</span>\n                    <input type=\"text\" className=\"form-control\" value={this.state.value} onChange={this.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component, useRef } from 'react'\nimport \"./Popup.css\"\n\nexport default class Popup extends Component {\n    constructor(props) {\n        super(props)\n\n        const left_offset = -394 + 20 * (18 - this.props.cols - this.props.colConstraint)\n        let top_offset = 375\n        if (this.props.animation) {\n            top_offset += 141\n        }\n        this.state = {\n            text: \"\",\n            value: [],\n            axis: \"\",\n            valid: true,\n            buttonText: \"Press Enter to Submit\",\n            left_offset: left_offset,\n            top_offset: top_offset\n        }\n\n\n\n        this.getText = this.getText.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.onKeyDown = this.onKeyDown.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        this.getText()\n        this.nameInput.focus()\n    }\n\n    getText() {\n        let text\n\n        if (this.props.row < this.props.rowConstraint) {\n            text = \"col \" + (this.props.col - this.props.colConstraint)\n            this.setState({ axis: \"cols\" })\n        }\n        else {\n            text = \"row \" + (this.props.row - this.props.rowConstraint)\n            this.setState({ axis: \"rows\" })\n        }\n        this.setState({ text: text })\n    }\n\n    handleChange(event) {\n        let res = event.target.value.split(\" \")\n        let value = res.map(val => +val)\n        this.setState({ value: value });\n    }\n\n    onKeyDown = (event) => {\n        console.log(event.key)\n        // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            event.stopPropagation();\n            this.handleSubmit(event);\n        }\n    }\n\n    handleSubmit(event) {\n        let constraint_block_total = this.state.value.length - 1\n        this.state.value.forEach(constraint_val => {\n            //if constraints are invalid, make block total an invalid number\n            if (!Number.isInteger(constraint_val) || constraint_val < 1) {\n                constraint_block_total += 25\n            }\n            else {\n                constraint_block_total += constraint_val\n            }\n        })\n        const axis = this.state.axis\n        if (constraint_block_total <= this.props[axis]) {\n            this.setState({\n                valid: true,\n                buttonText: \"Press Enter to Submit\",\n            })\n            //submit value\n            this.props.passVal(this.state.value, this.state.axis)\n        }\n        else {\n            this.setState({\n                valid: false,\n                buttonText: \"Invalid Entry\"\n            })\n        }\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"popup\" onKeyDown={this.onKeyDown} style={{ \"left\": this.state.left_offset, \"top\": this.state.top_offset }}>\n\n                <div className=\"input-group mb-3\" onSubmit={this.handleSubmit}>\n                    <span className=\"input-group-addon addon-small\">{this.state.text}</span>\n                    <input type=\"text\" className=\"form-control\" ref={(input) => { this.nameInput = input; }} value={this.props.value} onChange={this.handleChange} />\n                </div>\n                <input type=\"submit\" value={this.state.buttonText} className=\"btn btn-danger btn-small\" onClick={this.handleSubmit} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Popup from \"./Popup\"\nimport \"./Constraint.css\"\n\nexport default class Constraint extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: [],\n            style: []\n        }\n        this.state.style = this.props.style\n        this.state.style[\"color\"] = this.updateColor()\n\n        this.updateColor = this.updateColor.bind(this)\n        this.onClick = this.onClick.bind(this)\n        this.getPopupVal = this.getPopupVal.bind(this)\n        this.closePopup = this.closePopup.bind(this)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.style !== this.props.style) {\n            let style = this.props.style\n            style[\"color\"] = this.updateColor()\n            this.setState({\n                style: style\n            })\n\n        }\n        if (this.state.style.color !== this.updateColor()) {\n            let style = JSON.parse(JSON.stringify(this.state.style))\n            style[\"color\"] = this.updateColor()\n            this.setState({\n                style: style\n            })\n        }\n    }\n\n    updateColor() {\n        let color = \"rgb(155,155,155)\"\n        if (this.props.value !== \"X\") {\n            color = \"black\"\n        }\n        return color\n    }\n\n\n    onClick() {\n        if (this.props.showPopup) {\n            this.closePopup()\n        }\n        else {\n            this.props.passPopupIndices([this.props.row, this.props.col])\n        }\n\n    }\n\n    getPopupVal(value, axis) {\n        this.setState({\n            value: value\n        })\n        if (axis !== \"rows\") {\n            this.props.passPopupVal(value, axis, this.props.col)\n        }\n        else if (axis !== \"cols\") {\n            this.props.passPopupVal(value, axis, this.props.row)\n        }\n\n        this.closePopup()\n    }\n\n    closePopup() {\n        this.props.passPopupIndices([-1, -1])\n    }\n\n\n\n\n    render() {\n        return (\n            <span className=\"constraintWrapper\">\n                <div className=\"gridSquare constraint\" onClick={this.onClick} style={this.state.style}>\n                    {this.props.value}\n                </div>\n                <span>\n                    {this.props.showPopup ? <Popup\n                        passVal={this.getPopupVal}\n                        rows={this.props.rows} cols={this.props.cols}\n                        row={this.props.row} col={this.props.col}\n                        rowConstraint={this.props.rowConstraint}\n                        colConstraint={this.props.colConstraint} animation={this.props.animation} /> : <span></span>}\n                </span>\n            </span>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Constraint from \"./Constraint\"\nimport \"./Grid.css\"\n\nexport default class Grid extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            grid: [],\n            popupIndices: [-1, -1],\n            solution: null,\n            images: {\n                Duck: {\n                    row_constraint_len: 4,\n                    col_constraint_len: 3,\n                    row_constraint: [[3], [5], [3, 4], [7], [5], [3], [5], [8, 1], [3, 3, 3], [2, 3, 7], [2, 4, 5], [2, 8], [10], [3, 2], [6]],\n                    col_constraint: [[1], [2, 4], [4, 6], [2, 6, 2, 1], [8, 2, 1, 1], [8, 2, 3], [4, 2, 6], [2, 2, 5], [3, 2, 1], [6], [5], [4], [5], [4], [3]],\n                },\n                Crab: {\n                    row_constraint_len: 5,\n                    col_constraint_len: 6,\n                    col_constraint: [[2, 3], [1, 2, 2], [2, 2, 2, 5], [2, 1, 2, 3], [2, 1, 1, 1], [2, 2, 4], [3, 10], [6, 8], [4, 11], [2, 1, 9], [2, 1, 1, 10], [2, 1, 12], [1, 12], [1, 1, 11], [2, 9], [3, 2, 10], [11, 1, 1, 3], [7, 1, 1, 1, 2], [2, 1, 1, 1], [1, 1, 1, 2], [1, 1, 2, 2, 1], [2, 2, 2, 3], [3, 2, 2], [1]],\n                    row_constraint: [[1], [2], [3], [4, 2, 2], [6, 4], [3, 3], [6, 2], [2, 2], [2, 1, 1, 1, 2], [4, 2, 2, 2], [1, 2, 1, 4, 2], [1, 1, 9, 4], [14, 2, 2], [2, 12, 2, 1], [2, 1, 10, 2, 3], [1, 15, 1], [2, 11, 4, 1], [2, 14, 3], [1, 2, 15, 1], [1, 2, 9, 2, 2, 1], [1, 3, 3], [1, 1], [1, 1], [1]]\n                },\n                Koala: {\n                    row_constraint_len: 6,\n                    col_constraint_len: 6,\n                    col_constraint: [[5, 10], [2, 2, 3, 2], [1, 1, 2, 1], [1, 1, 2, 1, 2], [3, 5, 1, 1], [1, 2, 1, 1], [1, 1, 2, 1, 2, 1], [1, 1, 2, 2, 1], [1, 3, 1, 2, 2, 1], [1, 3, 1, 2, 1, 1], [1, 1, 2, 1, 1], [1, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1], [2, 2, 3, 1, 1], [2, 2, 4, 1, 1, 1], [1, 3, 1, 1, 2, 1], [1, 2, 1, 2, 2, 3], [2, 3, 1, 2, 1, 3], [4, 2, 2, 4, 3], [2, 2, 5, 4], [1, 1, 10], [8, 8, 3], [15, 3], [1, 1, 3], [3, 2]],\n                    row_constraint: [[4, 4, 2], [2, 11, 2, 2], [1, 1, 1, 1, 2], [1, 1, 2], [1, 2, 2], [2, 1, 1, 2], [4, 2, 2], [1, 1, 1, 2, 6], [1, 2, 1, 2, 1, 1], [2, 2, 5, 2, 1], [2, 1, 2, 2, 3], [2, 2, 2, 4], [1, 7, 2, 2], [2, 1, 2, 2], [1, 2, 1, 2, 3], [1, 2, 3, 3], [1, 2, 2, 4], [1, 2, 1, 5], [1, 3, 7, 3, 1], [1, 1, 2, 3, 2], [1, 2, 1, 2], [1, 8, 5], [2, 8], [3, 6], [17]],\n                },\n                Tea: {\n                    row_constraint_len: 4,\n                    col_constraint_len: 2,\n                    col_constraint: [[1], [1], [2, 2], [3, 2], [2, 3, 2], [2, 5, 3], [2, 7, 3], [10, 3], [14], [1, 2, 13], [1, 4, 13], [1, 6, 13], [1, 4, 1, 13], [2, 4, 13], [2, 4, 13], [8, 13], [7, 13], [7, 8, 3], [5, 7, 3], [5, 5, 1, 3], [3, 3, 1, 2], [1, 2, 2], [1, 1, 2], [1, 2, 1], [4, 1]],\n                    row_constraint: [[9], [7], [6], [6], [8], [9], [2, 8], [3, 7], [3, 4], [2, 2], [2, 2], [2], [17], [21], [17, 1], [15, 1], [15, 2], [13, 3], [16], [11], [9], [25], [21], [15], [9]],\n                },\n                Camera: {\n                    row_constraint_len: 6,\n                    col_constraint_len: 7,\n                    col_constraint: [[1, 1, 9], [1, 2, 8], [1, 1, 2, 8], [12], [4, 2], [2, 4, 1], [2, 6, 1], [2, 6, 1], [5, 2, 6, 1], [1, 1, 2, 1, 4, 1], [1, 3, 2, 2, 3, 1], [1, 6, 4, 1], [1, 1, 7, 2], [1, 2, 3, 1, 9], [1, 1, 2, 8], [5, 11], [9], [1, 1], [1], [1, 1]],\n                    row_constraint: [[1, 1, 8], [1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 2, 1, 1], [1, 1, 1, 1], [6], [4], [4], [2, 2], [15], [13, 3], [1, 2, 2, 2], [4, 5, 4], [4, 4, 2, 4], [4, 5, 1, 4], [4, 7, 4], [4, 7, 4], [4, 5, 4], [5, 5], [15]]\n                },\n                Teapot: {\n                    row_constraint_len: 6,\n                    col_constraint_len: 4,\n                    col_constraint: [[2, 1, 2], [1, 2, 1, 2, 2, 1], [2, 1, 2, 3], [1, 1, 1, 1, 3, 3], [1, 1, 1, 1, 2], [3, 3, 1, 1], [2, 2, 1, 1, 1], [1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1], [2, 1, 1, 1, 1], [1, 2, 1, 2, 2, 1], [2, 1, 3, 3, 1], [1, 1, 9, 1], [2, 9, 1], [10, 2], [6, 3], [2, 1, 4], [2, 2, 4], [5, 4], [3, 4]],\n                    row_constraint: [[1, 4, 1], [3, 1], [1, 1, 1], [1, 1], [3, 4], [1, 6], [1, 1], [2, 10], [1, 1, 1, 1], [1, 12, 3], [1, 10], [1, 5, 2], [1, 4, 2], [1, 4, 2], [1, 6], [1, 5], [3, 1, 5, 4], [3, 9, 5], [1, 3, 6], [2, 17]]\n                }\n            }\n        }\n\n        this.state[\"row_constraint_len\"] = this.state.images[this.props.image][\"row_constraint_len\"]\n        this.state[\"col_constraint_len\"] = this.state.images[this.props.image][\"col_constraint_len\"]\n        this.state[\"row_constraint\"] = this.state.images[this.props.image][\"row_constraint\"]\n        this.state[\"col_constraint\"] = this.state.images[this.props.image][\"col_constraint\"]\n        // let [row_constraint, col_constraint] = this.constructConstraints()\n        // this.state.row_constraint = row_constraint\n        // this.state.col_constraint = col_constraint\n        this.state.grid = this.constructGrid()\n\n        this.playAnimation = this.playAnimation.bind(this)\n        this.constructConstraints = this.constructConstraints.bind(this)\n        this.populateGrid = this.populateGrid.bind(this)\n        this.constructGrid = this.constructGrid.bind(this)\n        this.renderGrid = this.renderGrid.bind(this)\n        this.getPopupIndices = this.getPopupIndices.bind(this)\n        this.getPopupVal = this.getPopupVal.bind(this)\n        this.resizeConstraints = this.resizeConstraints.bind(this)\n        this.passState = this.passState.bind(this)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.submit !== this.props.submit && this.props.submit === true) {\n            this.passState()\n        }\n        else if (prevProps.popupIndices !== this.props.popupIndices && this.state.popupIndices !== this.props.popupIndices) {\n            this.setState({\n                popupIndices: [-1, -1]\n            })\n        }\n        else if (prevProps.image !== this.props.image) {\n            if (this.props.image !== \"None\") {\n                this.setState({\n                    row_constraint_len: this.state.images[this.props.image][\"row_constraint_len\"],\n                    col_constraint_len: this.state.images[this.props.image][\"col_constraint_len\"],\n                    row_constraint: this.state.images[this.props.image][\"row_constraint\"],\n                    col_constraint: this.state.images[this.props.image][\"col_constraint\"],\n                }, () => this.setState({\n                    grid: this.constructGrid()\n                }))\n            }\n            else {\n                let [row_constraint, col_constraint] = this.constructConstraints()\n                this.setState({\n                    row_constraint_len: 1,\n                    col_constraint_len: 1,\n                    row_constraint: row_constraint,\n                    col_constraint: col_constraint\n                }, this.setState({\n                    grid: this.constructGrid()\n                }))\n            }\n\n        }\n        else if (prevProps.rows !== this.props.rows || prevProps.cols !== this.props.cols) {\n            let [row_constraint, col_constraint] = this.constructConstraints()\n            this.setState({\n                row_constraint_len: 1,\n                col_constraint_len: 1,\n                row_constraint: row_constraint,\n                col_constraint: col_constraint\n            }, this.setState({\n                grid: this.constructGrid()\n            }))\n        }\n        else if (prevState.row_constraint_len !== this.state.row_constraint_len || prevState.col_constraint_len !== this.state.col_constraint_len) {\n            let grid = this.constructGrid()\n            this.setState({\n                grid: grid\n            })\n        }\n\n        else if (prevProps.grid !== this.props.grid) {\n            if (this.props.animation === false) {\n                this.populateGrid(this.props.grid)\n            }\n            else {\n                this.playAnimation()\n            }\n        }\n\n        else if (prevProps.replay_animation !== this.props.replay_animation && this.props.replay_animation === true) {\n            this.playAnimation()\n        }\n    }\n    playAnimation() {\n        let grids = this.props.grid\n        let display_grids = []\n        for (let j = 0; j < this.props.grid.length; j++) {\n            let grid = grids[j]\n            if (grid[0].length === 1) {\n                grid = [grid]\n            }\n            if (grid.length < this.props.rows) {\n                const l = grid.length\n                for (let i = 0; i < this.props.rows - l; i++) {\n                    let row = Array(this.props.cols)\n                    row.fill(0)\n                    grid.push(row)\n                }\n            }\n\n            if (j === 0) {\n                display_grids.push(grid)\n            }\n            else if (j !== 0 && grid !== display_grids[j - 1]) {\n                display_grids.push(grid)\n            }\n        }\n        let j = 0\n        const id = setInterval(() => {\n            if (j >= display_grids.length) {\n                this.populateGrid(display_grids[display_grids.length - 1])\n                clearInterval(id)\n            }\n            else {\n                const grid = display_grids[j]\n                this.populateGrid(grid)\n                j += 1\n            }\n        }, this.props.animation_rate)\n        console.log(this.props.animation_rate)\n    }\n\n    populateGrid(grid_input) {\n        if (grid_input === \"No Solution\") {\n            this.setState({\n                solution: \"No Solution Found\",\n                grid: this.constructGrid()\n            })\n            return\n        }\n        let grid = this.state.grid\n        for (let i = 0; i < this.props.rows; i++) {\n            for (let j = 0; j < this.props.cols; j++) {\n                const i_offset = i + this.state.row_constraint_len\n                const j_offset = j + this.state.col_constraint_len\n\n                grid[i_offset][j_offset] = grid_input[i][j]\n            }\n        }\n        this.setState({\n            grid: grid,\n            solution: \"Solution Found!\",\n            popup: [-1, -1]\n        })\n    }\n\n    constructConstraints() {\n        let row_constraint = new Array(this.props.rows)\n        for (let i = 0; i < this.props.rows; i++) {\n            row_constraint[i] = []\n        }\n        let col_constraint = new Array(this.props.cols)\n        for (let i = 0; i < this.props.cols; i++) {\n            col_constraint[i] = []\n        }\n        return [row_constraint, col_constraint]\n    }\n\n    constructGrid() {\n        const rows = this.props.rows\n        const cols = this.props.cols\n        const row_constraint_len = this.state.row_constraint_len\n        const col_constraint_len = this.state.col_constraint_len\n\n\n        let grid = new Array(rows + row_constraint_len)\n        //form empty grid of 0s\n        for (let i = 0; i < rows + row_constraint_len; i++) {\n            let row = new Array(cols + col_constraint_len)\n            for (let j = 0; j < cols + col_constraint_len; j++) {\n                row[j] = 0\n            }\n            grid[i] = row\n        }\n\n        for (let i = 0; i < row_constraint_len; i++) {\n            let row = new Array(cols + col_constraint_len)\n            for (let j = 0; j < cols + col_constraint_len; j++) {\n                row[j] = -1\n            }\n            grid[i] = row\n        }\n        for (let i = row_constraint_len; i < row_constraint_len + rows; i++) {\n            let row = new Array(cols + col_constraint_len)\n            for (let j = 0; j < col_constraint_len; j++) {\n                row[j] = -1\n            }\n            for (let j = col_constraint_len; j < cols + col_constraint_len; j++) {\n                row[j] = 0\n            }\n            grid[i] = row\n        }\n\n        return grid\n    }\n\n    renderGrid() {\n        return this.state.grid.map((row, i) => {\n            return <div className=\"gridRow\">{\n                row.map((element, j) => {\n\n                    if (element === -1) {\n                        let showPopup = false\n                        if (i === this.state.popupIndices[0] && j === this.state.popupIndices[1]) {\n                            showPopup = true\n                        }\n\n                        let style = {\n                            \"border-top\": \"inherit\",\n                            \"border-left\": \"inherit\",\n                            \"border-right\": \"none\",\n                            \"background-color\": \"inherit\",\n                            \"border-radius\": \"none\",\n                            \"border-bottom\": \"none\",\n                        }\n                        if (i === 0 && j >= this.state.col_constraint_len) {\n                            style[\"border-top\"] = \"2px solid black\"\n                        }\n\n                        if (i >= this.state.row_constraint_len && j === 0) {\n                            style[\"border-left\"] = \"2px solid black\"\n                        }\n\n                        if (i === this.state.row_constraint_len && j < this.state.col_constraint_len) {\n                            style[\"border-top\"] = \"2px solid black\"\n                        }\n\n                        if (i <= this.state.row_constraint_len && j === this.state.col_constraint_len) {\n                            style[\"border-left\"] = \"2px solid black\"\n                        }\n\n                        //row constraint selectors\n                        if (i >= this.state.row_constraint_len) {\n                            const constraint = this.state.row_constraint[i - this.state.row_constraint_len]\n                            let val\n                            if (constraint != null && j - this.state.col_constraint_len + constraint.length >= 0) {\n                                val = constraint[j - this.state.col_constraint_len + constraint.length]\n                            }\n                            else {\n                                val = \"X\"\n                            }\n                            return <Constraint passPopupVal={this.getPopupVal} passPopupIndices={this.getPopupIndices}\n                                rows={this.props.rows} cols={this.props.cols} row={i} col={j} rowConstraint={this.state.row_constraint_len}\n                                colConstraint={this.state.col_constraint_len} showPopup={showPopup}\n                                value={val} style={style} animation={this.props.animation} />\n                        }\n                        //column constraint selectors\n                        if (j >= this.state.col_constraint_len) {\n                            const constraint = this.state.col_constraint[j - this.state.col_constraint_len]\n                            let val\n                            if (constraint != null && i - this.state.row_constraint_len + constraint.length >= 0) {\n                                val = constraint[i - this.state.row_constraint_len + constraint.length]\n                            }\n                            else {\n                                val = \"X\"\n                            }\n                            return <Constraint passPopupVal={this.getPopupVal} passPopupIndices={this.getPopupIndices}\n                                rows={this.props.rows} cols={this.props.cols} row={i} col={j} rowConstraint={this.state.row_constraint_len}\n                                colConstraint={this.state.col_constraint_len} showPopup={showPopup} value={val} style={style} animation={this.props.animation} />\n                        }\n                        //unselectable gray area\n                        else {\n                            return <div className=\"gridSquare unused\" style={style}> </div>\n                        }\n                    }\n\n                    let style = {\n                        \"border-top\": this.props.border_val,\n                        \"border-left\": this.props.border_val,\n                        \"border-right\": \"\",\n                        \"border-bottom\": \"none\",\n                        \"background-color\": \"white\",\n                        \"color\": \"black\"\n                    }\n\n                    if ((i - this.state.row_constraint_len) % 5 === 0) {\n                        if (i === this.state.row_constraint_len) {\n                            style[\"border-top\"] = \"2px solid black\"\n                        }\n                        else if (this.props.show_border) {\n                            style[\"border-top\"] = \"2px solid gray\"\n                        }\n                    }\n                    if ((j - this.state.col_constraint_len) % 5 === 0) {\n                        if (j === this.state.col_constraint_len) {\n                            style[\"border-left\"] = \"2px solid black\"\n                        }\n                        else if (this.props.show_border) {\n                            style[\"border-left\"] = \"2px solid gray\"\n                        }\n                    }\n\n                    if (element === 0) {\n                        return <div className=\"gridSquare\" style={style}> </div>\n                    }\n\n                    else if (element === -2) {\n                        return <div className=\"gridSquare\" style={style}>{this.props.excluded_val}</div>\n                    }\n\n                    else {\n                        style[\"background-color\"] = \"black\"\n                        style[\"border-top\"] = 0\n                        style[\"border-left\"] = 0\n                        return <div className=\"gridSquare\" style={style}> </div>\n                    }\n                })\n            }</div>\n        })\n    }\n\n    getPopupIndices(val) {\n        this.props.passPopupIndices(val)\n        this.setState({\n            popupIndices: val\n        })\n    }\n\n    getPopupVal(val, axis, index) {\n        if (axis === \"rows\") {\n            let row_constraint = this.state.row_constraint\n            row_constraint[index - this.state.row_constraint_len] = val\n            this.setState({\n                row_constraint: row_constraint\n            })\n            this.resizeConstraints(val.length, axis)\n            return\n        }\n        else if (axis === \"cols\") {\n            let col_constraint = this.state.col_constraint\n            col_constraint[index - this.state.col_constraint_len] = val\n            this.setState({\n                col_constraint: col_constraint\n            })\n            this.resizeConstraints(val.length, axis)\n            return\n        }\n    }\n\n    resizeConstraints(new_len, axis) {\n        if (axis !== \"rows\") {\n            if (new_len > this.state.row_constraint_len) {\n                this.setState({\n                    row_constraint_len: new_len\n                })\n            }\n            return\n        }\n        if (axis !== \"cols\") {\n            if (new_len > this.state.col_constraint_len) {\n                this.setState({\n                    col_constraint_len: new_len\n                })\n            }\n            return\n        }\n    }\n\n    passState() {\n        this.props.passState(this.state)\n    }\n\n    render() {\n        return (\n            <div className=\"gridWrapper\">\n                <div className=\"grid\">\n                    {this.renderGrid()}\n                </div>\n\n                <div>\n                    <h4>{this.state.solution}</h4>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport RowColForm from './RowColForm'\nimport Grid from './Grid.js'\nimport \"./Page.css\"\n\n\nexport default class Page extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rows: 15,\n            cols: 15,\n            request_body: null,\n            response: null,\n            submit: false,\n            popupIndices: [-1, -1],\n            exitPopup: false,\n            animation: false,\n            animation_rate: 100,\n            replay_animation: false,\n            solver: \"DFS\",\n            image: \"Duck\",\n            border_val: \"1px dashed gray\",\n            show_border: true,\n            excluded_val: \"X\"\n        }\n        this.getFormValue = this.getFormValue.bind(this)\n        this.getGridState = this.getGridState.bind(this)\n        this.getData = this.getData.bind(this)\n        this.updateGrid = this.updateGrid.bind(this)\n        this.submit = this.submit.bind(this)\n        this.getPopupIndices = this.getPopupIndices.bind(this)\n        this.clickHandler = this.clickHandler.bind(this)\n        this.animationToggle = this.animationToggle.bind(this)\n        this.animationRateToggle = this.animationRateToggle.bind(this)\n        this.replayAnimation = this.replayAnimation.bind(this)\n        this.solverToggle = this.solverToggle.bind(this)\n        this.imageToggle = this.imageToggle.bind(this)\n        this.borderToggle = this.borderToggle.bind(this)\n        this.excludedValToggle = this.excludedValToggle.bind(this)\n    }\n\n    getFormValue = (name, value) => {\n        let newState = this.state\n        if (Number.isInteger(+value) && +value > 0 && +value < 26) {\n            newState[name] = value\n            newState[\"image\"] = \"None\"\n            newState[\"response\"] = null\n            if (+value > 15) {\n                newState[\"solver\"] = \"heuristic\"\n            }\n            this.setState(newState)\n        }\n    }\n\n\n    getGridState(state) {\n        const gridState = state\n        const request_body = {\n            w: this.state.cols,\n            h: this.state.rows,\n            x: gridState.col_constraint,\n            y: gridState.row_constraint,\n            solver: this.state.solver,\n            animation: this.state.animation\n        }\n        this.setState({\n            request_body: request_body\n        }, () => this.getData())\n    }\n\n    getData() {\n        const url = \"https://picross-solver.herokuapp.com\"\n        axios({\n            method: 'post',\n            url: url,\n            data: this.state.request_body\n        }).then((response) => {\n            let data = response.data\n            if (typeof data === \"string\") {\n                data = JSON.parse(data)\n            }\n\n            this.setState({\n                response: response.data,\n                submit: false\n            })\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    updateGrid() {\n        return this.state.response\n    }\n\n    submit() {\n        this.setState({\n            submit: true\n        })\n    }\n\n    getPopupIndices(val) {\n        this.setState({\n            popupIndices: val,\n            exitPopup: true\n        })\n    }\n\n    clickHandler(event) {\n        if (this.state.popupIndices[0] !== -1 && this.state.popupIndices[1] !== -1) {\n            if (this.state.exitPopup === false) {\n                this.setState({\n                    exitPopup: true\n                })\n            }\n            else {\n                this.setState({\n                    popupIndices: [-1, -1],\n                    exitPopup: false\n                })\n            }\n        }\n    }\n\n    animationToggle() {\n        this.setState({\n            animation: !this.state.animation\n        })\n    }\n\n    animationRateToggle() {\n        if (this.state.animation_rate > 20) {\n            this.setState({\n                animation_rate: this.state.animation_rate - 20\n            })\n        }\n        else {\n            this.setState({\n                animation_rate: 100\n            })\n        }\n    }\n\n    solverToggle() {\n        if (this.state.solver === \"DFS\") {\n            this.setState({\n                solver: \"heuristic\"\n            })\n        }\n        if (this.state.solver === \"heuristic\") {\n            if (this.state.rows <= 15 && this.state.cols <= 15) {\n                this.setState({\n                    solver: \"DFS\"\n                })\n            }\n            else {\n                alert(\"The dimensions of the grid are too large to use DFS\")\n            }\n        }\n    }\n\n    imageToggle() {\n        this.setState({\n            exitPopup: true\n        }, () => {\n            if (this.state.image === \"None\") {\n                this.setState({\n                    image: \"Duck\",\n                    rows: 15,\n                    cols: 15,\n                    response: null\n                })\n            }\n            if (this.state.image === \"Duck\") {\n                this.setState({\n                    image: \"Camera\",\n                    rows: 20,\n                    cols: 20,\n                    solver: \"heuristic\",\n                    response: null\n                })\n            }\n            if (this.state.image === \"Camera\") {\n                this.setState({\n                    image: \"Teapot\",\n                    rows: 20,\n                    cols: 20,\n                    solver: \"heuristic\",\n                    response: null\n                })\n            }\n            if (this.state.image === \"Teapot\") {\n                this.setState({\n                    image: \"Crab\",\n                    rows: 24,\n                    cols: 24,\n                    solver: \"heuristic\",\n                    response: null\n                })\n            }\n            if (this.state.image === \"Crab\") {\n                this.setState({\n                    image: \"Koala\",\n                    rows: 25,\n                    cols: 25,\n                    solver: \"heuristic\",\n                    response: null\n                })\n            }\n            if (this.state.image === \"Koala\") {\n                this.setState({\n                    image: \"Tea\",\n                    rows: 25,\n                    cols: 25,\n                    solver: \"heuristic\",\n                    response: null\n                })\n            }\n            if (this.state.image === \"Tea\") {\n                this.setState({\n                    image: \"Duck\",\n                    rows: 15,\n                    cols: 15,\n                    solver: \"heuristic\",\n                    response: null\n                })\n            }\n        })\n    }\n\n    borderToggle() {\n        if (this.state.border_val === \"1px dashed gray\")\n            this.setState({\n                show_border: !this.state.show_border,\n                border_val: \"0px\"\n            })\n        else {\n            this.setState({\n                show_border: !this.state.show_border,\n                border_val: \"1px dashed gray\"\n            })\n        }\n    }\n\n    excludedValToggle() {\n        if (this.state.excluded_val === \"X\") {\n            this.setState({\n                excluded_val: \"\"\n            })\n        }\n        else {\n            this.setState({\n                excluded_val: \"X\"\n            })\n        }\n    }\n\n    replayAnimation() {\n        if (this.state.response == null) {\n            this.submit()\n        }\n        else {\n            this.setState({\n                replay_animation: true\n            }, () => {\n                this.setState({\n                    replay_animation: false\n                })\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"page\" onClick={this.clickHandler}>\n                <h1 className=\"display-4 header\">Picross Solver</h1>\n                <p className=\"h4\">Click on the rows and columns to add and remove constraints</p>\n                <div className=\"contentWrapper\">\n                    <div className=\"leftSideWrapper\">\n                        <h5 className=\"settings\">Grid Dimension Settings:</h5>\n                        <div className=\"rowColWrapper\">\n                            <RowColForm name=\"Number of Rows (Max 25)\" id=\"rows\" passValue={this.getFormValue} val={this.state.rows} />\n                            <RowColForm name=\"Number of Cols (Max 25)\" id=\"cols\" passValue={this.getFormValue} val={this.state.cols} />\n                        </div>\n                        <h5 className=\"settings\">Display Settings:</h5>\n                        <div className=\"submissionWrapper\">\n                            <div className=\"input-group-append\">\n                                <button onClick={this.excludedValToggle} className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Highlight Excluded Cells: {this.state.excluded_val === \"X\" ? \"On\" : \"Off\"}</button>\n                            </div>\n                            <div className=\"input-group-append\">\n                                <button onClick={this.borderToggle} className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Borders: {this.state.show_border ? \"On\" : \"Off\"}</button>\n                            </div>\n                        </div>\n                        <h5 className=\"settings\">Image Preset Setting:</h5>\n                        <div className=\"submissionWrapper\">\n                            <div className=\"input-group-append\">\n                                <button onClick={this.imageToggle} className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Preset Image: {this.state.image}</button>\n                            </div>\n                        </div>\n                        <h5 className=\"settings\">Solver Settings:</h5>\n                        <div className=\"submissionWrapper\">\n                            <div className=\"input-group-append\">\n                                <button onClick={this.animationToggle} className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Animation: {this.state.animation === true ? \"On\" : \"Off\"}</button>\n                            </div>\n                            <div className=\"input-group-append\">\n                                <button onClick={this.solverToggle} className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Solver: {this.state.solver}</button>\n                            </div>\n                            <input type=\"submit\" value=\"Solve Puzzle!\" className=\"btn btn-warning\" onClick={this.submit} />\n                        </div>\n                        {this.state.animation === true ? <h5 className=\"settings\">Animation Settings:</h5> : <span></span>}\n                        {this.state.animation === true ? <div className=\"submissionWrapper\">\n                            <div className=\"input-group-append\">\n                                <button onClick={this.animationRateToggle} className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Animation Rate: {(1000 / this.state.animation_rate).toString().substring(0, 2) + \" FPS\"}</button>\n                            </div>\n                            <div className=\"input-group-append\">\n                                <button onClick={this.replayAnimation} className=\"btn btn-danger\" type=\"button\" id=\"button-addon2\">Replay Animation</button>\n                            </div>\n                        </div> : <span></span>}\n                    </div>\n                    <Grid rows={this.state.rows} cols={this.state.cols} passState={this.getGridState} grid={this.state.response}\n                        submit={this.state.submit} popupIndices={this.state.popupIndices} passPopupIndices={this.getPopupIndices}\n                        animation={this.state.animation} animation_rate={this.state.animation_rate} replay_animation={this.state.replay_animation} image={this.state.image}\n                        border_val={this.state.border_val} show_border={this.state.show_border} excluded_val={this.state.excluded_val} />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Page from \"./Page\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\" />\n\n      {/* <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\" integrity=\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\" crossorigin=\"anonymous\" /> */}\n\n      <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"></script>\n      <Page />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}